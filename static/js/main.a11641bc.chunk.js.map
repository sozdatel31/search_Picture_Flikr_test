{"version":3,"sources":["components/Header/Header.tsx","app-api/app-api.ts","redux/settingsReducer.ts","components/Error/error-utils.ts","redux/appReducer.ts","redux/localstorageReducer.ts","components/ImageCard/ImageCard.tsx","components/Error/ErrorSnackbar.tsx","components/SuccessSnackBar/SuccessSnackBar.tsx","components/Pagination/Pagination.tsx","components/SearchBoard/SearchBoard.tsx","components/SearchBoard/SearchBoardContainer.tsx","feature/useDebounce.ts","components/BookMarks.tsx","components/404/404.tsx","Routes.tsx","components/Nav/Nav.tsx","components/Footer/Footer.tsx","components/Modal.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/SearchBoard/SearchBoard.module.css","components/ImageCard/ImageCard.module.css","components/Nav/Nav.module.css","components/Header/Header.module.css","components/404/404.module.css","components/Footer/Footer.module.css"],"names":["Header","className","style","div","AppBar","color","position","Toolbar","navLink","to","Typography","variant","IconButton","AccountCircle","appAPI","tags","page","axios","create","baseURL","params","method","api_key","extras","format","nojsoncallback","per_page","setInstance","get","initialState","status","error","undefined","slice","createSlice","name","reducers","setAppStatus","state","action","payload","setAppError","actions","settingsReducer","reducer","handleServerAppError","data","dispatch","stat","message","pages","photo","isDisabled","setPhotosAC","photos","map","ph","url","originalformat","server","id","secret","removePhotoAC","index","findIndex","photoId","splice","setPagesAC","nextPageAC","isDisabledAC","appReducer","responseFn","res","length","addPictureAC","unshift","removePictureAC","setPicturesAC","localStorageReducer","ImageCard","props","Card","s","root","background","CardActionArea","CardMedia","media","image","picture","CardContent","itemsText","component","title","CardActions","button","Button","size","onClick","remotePhoto","description","Alert","elevation","ErrorSnackbar","useSelector","settings","useDispatch","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","bottom","severity","SuccessSnackbar","value","PaginationRounded","useState","currentPage","setPage","Pagination","count","totalPages","disabled","onChange","e","nextPage","shape","showFirstButton","showLastButton","SearchBoard","onChangeHandler","onKeyPressHandler","clearInput","TextField","label","helperText","onKeyPress","InputProps","endAdornment","InputAdornment","BackspaceOutlined","pagination","Grid","container","images","img","SearchBoardContainer","app","setError","setTitle","debouncedSearch","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","addItem","useCallback","text","trim","then","catch","nextTasksTC","currentTarget","getState","localStorage","getItem","JSON","parse","setItem","stringify","localstorage","addPicture","key","BookMarks","removePicture","fixHeight","direction","justifyContent","alignItems","P404","content","Routes","exact","path","render","from","Nav","menu","grid","activeClassName","active","Search","Bookmarks","Footer","useStyles","makeStyles","theme","createStyles","modal","display","paper","maxWidth","backgroundColor","textAlign","boxShadow","shadows","padding","spacing","TransitionsModal","classes","setOpen","timeout","onIdle","onActive","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a11641bc.chunk.js","sourcesContent":["import {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\r\nimport {AccountCircle} from '@material-ui/icons';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './Header.module.css'\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <div className={style.div}>\r\n            <AppBar color=\"inherit\" position=\"static\">\r\n                <Toolbar>\r\n                    <NavLink className={style.navLink} to=\"/search\">\r\n                        <Typography variant=\"h5\">\r\n                            Image Finder\r\n                        </Typography>\r\n                    </NavLink>\r\n                    <div className={style.div}/>\r\n                    <IconButton color=\"inherit\">\r\n                        <AccountCircle/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst setInstance = (tags: string, page: number = 1) => axios.create({\r\n    baseURL: `https://www.flickr.com/services/rest/`,\r\n    params: {\r\n        method: `flickr.photos.search`,\r\n        api_key: \"7b8388b09c7b64e0df597f927aef2657\",\r\n        extras: \"original_format\",\r\n        tags,\r\n        page,\r\n        format: 'json',\r\n        nojsoncallback: 1,\r\n        per_page: 15,\r\n    }\r\n})\r\n\r\n//===api===v\r\nexport const appAPI = {\r\n    getPicture(tags: string, page?: number) {\r\n        return setInstance(tags, page).get<ResponseType>(``)\r\n    }\r\n}\r\n\r\n//===types===v\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    originalformat?: string\r\n    originalsecret?: string\r\n}\r\n\r\nexport type PhotosType = {\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: number,\r\n    photo: Array<PhotoType>\r\n}\r\n\r\nexport type ResponseType = {\r\n    photos: PhotosType\r\n    stat: string\r\n    code?: number\r\n    message?: string\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\n\nconst initialState = {\n    status: 'idle' as RequestStatusType,\n    error: undefined as string | undefined\n}\n\nconst slice = createSlice({\n    name: \"settingReducer\",\n    initialState: initialState,\n    reducers: {\n        setAppStatus(state, action: PayloadAction<{ status: RequestStatusType }>) {\n            state.status = action.payload.status\n        },\n\n        setAppError(state, action: PayloadAction<{ error: string | undefined }>) {\n            state.error = action.payload.error\n        },\n    }\n})\n\nexport const {setAppStatus, setAppError} = slice.actions\nexport const settingsReducer = slice.reducer\n// export const settingsReducer = (state: settingsStateType = initialState, action: ActionsType): settingsStateType => {\n//     switch (action.type) {\n//         case 'APP/SETTINGS/SET-STATUS':\n//             return {...state, status: action.status}\n//         case 'APP/SETTINGS/SET-ERROR':\n//             return {...state, error: action.error}\n//         default:\n//             return state\n//     }\n// }\n\nexport type setAppStatusActionType = ReturnType<typeof setAppStatus>\nexport type setAppErrorActionType = ReturnType<typeof setAppError>\n","import {Dispatch} from 'redux';\nimport {ResponseType} from \"../../app-api/app-api\";\nimport {setAppError, setAppErrorActionType, setAppStatus, setAppStatusActionType} from \"../../redux/settingsReducer\";\n\nexport const handleServerAppError = (data: ResponseType, dispatch: ErrorUtilsDispatchType) => {\n    if (data.stat === \"fail\") {\n        dispatch(setAppError({error: data.message}));\n    } else {\n        dispatch(setAppError({error: 'Server is not responding'}));\n    }\n    dispatch(setAppStatus({status: 'failed'}));\n}\n\ntype ErrorUtilsDispatchType = Dispatch<setAppErrorActionType | setAppStatusActionType>","import {ThunkAction} from \"redux-thunk\";\nimport {appAPI, PhotoType, ResponseType} from \"../app-api/app-api\";\nimport {AppRootStateType} from \"./store\";\nimport {handleServerAppError} from \"../components/Error/error-utils\";\nimport {setAppError, setAppErrorActionType} from \"./settingsReducer\";\nimport {Dispatch} from \"redux\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nconst initialState:AppInitialStateType = {\n    page: 1,\n    pages: 0,\n    photo: [],\n    isDisabled: false\n}\n\nexport type DomainPhotoType = PhotoType & { url: string }\n\nexport type AppInitialStateType = {\n    page: number,\n    pages: number,\n    photo: Array<DomainPhotoType>,\n    isDisabled: boolean\n}\n\nconst slice = createSlice({\n    name: \"app\",\n    initialState: initialState,\n    reducers: {\n        setPhotosAC(state, action: PayloadAction<{ photos: Array<PhotoType>}>) {\n            state.photo = action.payload.photos.map(ph=> ({...ph,\n                url: ph.originalformat?`https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.${ph.originalformat}` :\n                    `https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.jpg`,\n            }))\n        },\n        removePhotoAC(state, action: PayloadAction<{photoId: string}>) {\n            const index = state.photo.findIndex(ph=>ph.id === action.payload.photoId)\n            if (index > -1) {\n                state.photo.splice(index, 1)\n            }\n        },\n        setPagesAC(state, action: PayloadAction<{ page: number, pages: number }>) {\n            state.page = action.payload.page\n            state.pages = action.payload.pages\n        },\n        nextPageAC(state, action: PayloadAction<{ page: number }>) {\n            state.page = action.payload.page\n        },\n        isDisabledAC(state, action: PayloadAction<{ isDisabled: boolean }>) {\n            state.isDisabled = action.payload.isDisabled\n        },\n    }\n})\nexport const {setPhotosAC, removePhotoAC, setPagesAC, nextPageAC, isDisabledAC} = slice.actions\nexport const appReducer = slice.reducer\n\ntype ActionsType =\n    ReturnType<typeof setPhotosAC>\n    | ReturnType<typeof removePhotoAC>\n    | ReturnType<typeof setPagesAC>\n    | ReturnType<typeof nextPageAC>\n    | ReturnType<typeof isDisabledAC>\n    | setAppErrorActionType;\n\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\n\nexport const setTasksTC = (text: string): ThunkType =>\n    (dispatch) => {\n        dispatch(setPhotosAC({photos: []}));\n        dispatch(isDisabledAC({isDisabled: true}));\n        appAPI.getPicture(text)\n            .then(res => responseFn(res.data, dispatch))\n            .catch(error => handleServerAppError(error, dispatch));\n    }\n\nexport const nextTasksTC = (text: string, page: number): ThunkType =>\n    (dispatch) => {\n        dispatch(nextPageAC({page}))\n        dispatch(isDisabledAC({isDisabled:true}));\n        appAPI.getPicture(text, page)\n            .then(res => responseFn(res.data, dispatch))\n            .catch(error => handleServerAppError(error, dispatch));\n    }\n\nfunction responseFn(res: ResponseType, dispatch: Dispatch): void {\n    if (res.stat === \"ok\") {\n        if (res.photos.photo.length) {\n            dispatch(setPhotosAC({photos: res.photos.photo}));\n            dispatch(setPagesAC({page: res.photos.page, pages: res.photos.pages}));\n            dispatch(isDisabledAC({isDisabled:false}));\n        } else {\n            dispatch(setAppError({error: \"Error:( Please, try again/Please enter a valid query\"}))\n        }\n    } else {\n        handleServerAppError(res, dispatch)\n    }\n}","import {DomainPhotoType} from \"./appReducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppRootStateType} from \"./store\";\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\ntype InitialStateType = Array<DomainPhotoType>;\nconst initialState: InitialStateType = [];\n\nconst slice = createSlice({\n    name: \"localStorage\",\n    initialState: initialState,\n    reducers: {\n        addPictureAC(state, action: PayloadAction<{ photo: DomainPhotoType }>) {\n            state.unshift({...action.payload.photo})\n        },\n        removePictureAC(state, action: PayloadAction<{ photoId: string }>) {\n            const index = state.findIndex(ph => ph.id === action.payload.photoId)\n            if (index > -1) {\n                state.splice(index, 1)\n            }\n        },\n        setPicturesAC(state, action: PayloadAction<Array<DomainPhotoType>>) {\n\n            state = action.payload\n            return state\n        }\n\n    }\n})\nexport const {addPictureAC, removePictureAC, setPicturesAC} = slice.actions\nexport const localStorageReducer = slice.reducer\n\n\nexport type ActionsType =\n    ReturnType<typeof addPictureAC>\n    | ReturnType<typeof removePictureAC>\n    | ReturnType<typeof setPicturesAC>;\n\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>;\n\nexport const addPicture = (photo: DomainPhotoType): ThunkType =>\n    (dispatch, getState: () => AppRootStateType) => {\n        let state = localStorage.getItem(\"state\");\n        state && dispatch(setPicturesAC(JSON.parse(state)));\n        dispatch(addPictureAC({photo}));\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\n    }\n\nexport const removePicture = (photoId: string): ThunkType =>\n    (dispatch, getState: () => AppRootStateType) => {\n        dispatch(removePictureAC({photoId}));\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\n    }\n\nexport const setPictures = (): ThunkType =>\n    (dispatch) => {\n\n        let state = localStorage.getItem(\"state\");\n        state && dispatch(setPicturesAC(JSON.parse(state)));\n    }\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport {DomainPhotoType} from \"../../redux/appReducer\";\nimport {CardContent, Typography} from \"@material-ui/core\";\nimport s from \"./ImageCard.module.css\";\n\ntype MediaCardPropsTYpe = {\n    picture: DomainPhotoType\n    description: string\n    remotePhoto: (id: string, picture: DomainPhotoType) => void\n}\n\nexport function ImageCard(props: MediaCardPropsTYpe) {\n    return (\n        <Card className={s.root} style={{background: \"#e4ea73\"}}>\n            <CardActionArea>\n                <CardMedia className={s.media} image={props.picture.url}/>\n                <CardContent className={s.itemsText} style={{background: \"#e4ea73\"}}>\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                        {props.picture.title}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions className={s.button}>\n                <Button variant=\"outlined\" size=\"small\" color=\"default\"\n                        onClick={() => props.remotePhoto(props.picture.id, props.picture)}>\n                    {props.description}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { AppRootStateType } from '../../redux/store';\nimport { setAppError } from '../../redux/settingsReducer';\n\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport function ErrorSnackbar() {\n    const error = useSelector<AppRootStateType, string | undefined>(state => state.settings.error);\n    const dispatch = useDispatch()\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        dispatch(setAppError({error: undefined}));\n    }\n\n    return (\n        <Snackbar open={error !== undefined} autoHideDuration={4000} onClose={handleClose}\n        style={{bottom: \"80px\"}}>\n            <Alert onClose={handleClose} severity=\"error\">\n                {error}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from '../../redux/store';\nimport {RequestStatusType, setAppStatus} from '../../redux/settingsReducer';\nimport Alert from '@material-ui/lab/Alert';\n\nexport function SuccessSnackbar(props: { value: string }) {\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.settings.status);\n    const dispatch = useDispatch();\n\n    const handleClose = () => {\n        dispatch(setAppStatus({status: \"idle\"}));\n    }\n\n    return (\n        <Snackbar open={status === \"succeeded\"} autoHideDuration={1000} onClose={handleClose}\n                  style={{bottom: \"80px\"}}>\n            <Alert severity=\"success\">{props.value}</Alert>\n        </Snackbar>\n    )\n}\n","import React, {ChangeEvent, useState} from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\n\ntype PaginationPropType = {\n    currentPage: number,\n    totalPages: number,\n    isDisabled: boolean,\n    nextPage: (page: number) => void,\n}\n\nexport function PaginationRounded(props: PaginationPropType) {\n\n    const [page, setPage] = useState<number>(props.currentPage);\n\n    const handleChangePage = (e: ChangeEvent<unknown>, page: number) => {\n        setPage(page);\n        props.nextPage(page);\n    }\n\n    return (\n            <Pagination page={page} count={props.totalPages} disabled={props.isDisabled} onChange={handleChangePage}\n                        variant=\"outlined\" shape=\"rounded\" showFirstButton showLastButton/>\n    );\n}\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport {Grid, TextField} from '@material-ui/core';\nimport {ImageCard} from \"../ImageCard/ImageCard\";\nimport {ErrorSnackbar} from \"../Error/ErrorSnackbar\";\nimport {SuccessSnackbar} from \"../SuccessSnackBar/SuccessSnackBar\";\nimport s from \"./SearchBoard.module.css\"\nimport {DomainPhotoType} from \"../../redux/appReducer\";\nimport {InputAdornment} from '@material-ui/core';\nimport {BackspaceOutlined} from '@material-ui/icons';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {PaginationRounded} from \"../Pagination/Pagination\";\n\ntype PropType = {\n    photo: Array<DomainPhotoType>,\n    isDisabled: boolean,\n    error: string | null,\n    title: string,\n    currentPage: number,\n    totalPages: number,\n    nextPage: (page: number) => void,\n    clearInput: () => void,\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void,\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\n    remotePhoto: (id: string, picture: DomainPhotoType) => void\n}\n\nexport function SearchBoard(props: PropType) {\n    const {\n        photo,\n        isDisabled,\n        error,\n        title,\n        nextPage,\n        onChangeHandler,\n        onKeyPressHandler,\n        remotePhoto,\n        currentPage,\n        totalPages,\n        clearInput\n    } = props;\n\n    return (\n        <div>\n            <ErrorSnackbar/>\n            <SuccessSnackbar value=\"Add picture success!\"/>\n            <TextField id=\"outlined-basic\" label=\"Find images\" variant=\"outlined\" className={s.root}\n                       error={!!error} helperText={error}\n                       value={title} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}\n                       InputProps={{\n                           endAdornment: (\n                               <InputAdornment position=\"end\" onClick={clearInput}>\n                                   <IconButton onClick={clearInput}>\n                                       <BackspaceOutlined/>\n                                   </IconButton>\n                               </InputAdornment>\n                           )\n                       }}\n            />\n\n            {!!photo.length &&\n            <div>\n                <div className={s.pagination}>\n                    <PaginationRounded currentPage={currentPage} totalPages={totalPages} isDisabled={isDisabled}\n                                       nextPage={nextPage}/>\n                </div>\n                <Grid container className={s.images}>\n\n                    {photo.map((img) => {\n                        return <ImageCard key={img.id} picture={img} remotePhoto={() => remotePhoto(img.id, img)}\n                                          description=\"Bookmark it!\"/>\n                    })}\n                </Grid>\n            </div>}\n        </div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DomainPhotoType, nextTasksTC, removePhotoAC, setPagesAC, setPhotosAC, setTasksTC} from \"../../redux/appReducer\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport {addPicture} from \"../../redux/localstorageReducer\";\nimport {setAppStatus} from \"../../redux/settingsReducer\";\nimport {SearchBoard} from './SearchBoard';\nimport {useDebounce} from \"../../feature/useDebounce\";\n\n\n\nexport function SearchBoardContainer() {\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.app.photo);\n    const isDisabled = useSelector<AppRootStateType, boolean>(state => state.app.isDisabled);\n    const currentPage = useSelector<AppRootStateType, number>(state => state.app.page);\n    const totalPages = useSelector<AppRootStateType, number>(state => state.app.pages);\n    const dispatch = useDispatch();\n\n    const [error, setError] = useState<string | null>(null);\n    const [title, setTitle] = useState<string>(\"\");\n\n    const debouncedSearch = useDebounce(title, 500);\n\n    const addItem = useCallback((title: string) => {\n        const trimmedTitle = title.trim();\n        if (trimmedTitle !== \"\") {\n            dispatch(setTasksTC(title));\n        } else {\n            setError(\"Title is required\");\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        dispatch(setPhotosAC({photos: []}));\n        dispatch(setPagesAC({page: 1, pages: 0}));\n    }, [dispatch]);\n\n    useEffect(() => {\n        debouncedSearch && addItem(title);\n    }, [debouncedSearch, title, addItem])\n\n    const clearInput = () => {\n        setTitle(\"\");\n        setError(null);\n        dispatch(setPhotosAC({photos: []}));\n        dispatch(setPagesAC({page: 1, pages: 0}));\n    }\n\n    const nextPage = (page: number) => {\n        dispatch(nextTasksTC(title, page));\n    }\n\n    const remotePhoto = (id: string, picture: DomainPhotoType) => {\n        dispatch(removePhotoAC({photoId: id}));\n        dispatch(addPicture(picture));\n        dispatch(setAppStatus({status: \"succeeded\"}));\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if(!e.currentTarget.value) dispatch(setPhotosAC({photos: []}));\n        setTitle(e.currentTarget.value);\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (error !== null) setError(null);\n        e.key === \"Enter\" && addItem(title);\n    }\n\n    return (\n        <SearchBoard photo={photo} isDisabled={isDisabled} error={error} title={title} nextPage={nextPage}\n                     currentPage={currentPage} totalPages={totalPages}\n                     onChangeHandler={onChangeHandler} remotePhoto={remotePhoto}\n                     onKeyPressHandler={onKeyPressHandler} clearInput={clearInput}/>\n    )\n}","import { useState, useEffect } from 'react';\n\nexport function useDebounce(value: string, delay: number) {\n\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n            const handler = setTimeout(() => setDebouncedValue(value), delay);\n            return () => clearTimeout(handler);\n        }, [value]);\n    return debouncedValue;\n}","import React, {useEffect} from 'react';\nimport {ImageCard} from \"./ImageCard/ImageCard\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../redux/store\";\nimport {DomainPhotoType} from \"../redux/appReducer\";\nimport {removePicture, setPictures} from \"../redux/localstorageReducer\";\nimport {Grid} from \"@material-ui/core\";\nimport {SuccessSnackbar} from \"./SuccessSnackBar/SuccessSnackBar\";\nimport {setAppStatus} from \"../redux/settingsReducer\";\nimport s from \"./SearchBoard/SearchBoard.module.css\";\n\nexport function BookMarks() {\n\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.localstorage);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        dispatch(setPictures());\n    }, [])\n\n    function remotePhoto(photoId: string) {\n        dispatch(removePicture(photoId));\n        dispatch(setAppStatus({status: \"succeeded\"}));\n    }\n\n    return (\n        <div className={`${s.images} ${s.fixHeight}`}>\n            <SuccessSnackbar value=\"Delete picture success!\"/>\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n                {!!photo.length && photo.map((img) => {\n                    return <ImageCard key={img.id} picture={img} remotePhoto={remotePhoto} description=\"Remove it\"/>\n                })}\n            </Grid>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./404.module.css\"\n\nexport function P404() {\n\n\n    return (\n        <div className={s.container}>\n            <div className={s.content}>\n                <h2>404</h2>\n                <h4>Something went wrong! Page not found</h4>\n                <p>This page does not exist, or it has not been created yet</p>\n                <NavLink to=\"/search\">Back to search picture</NavLink>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {SearchBoardContainer} from \"./components/SearchBoard/SearchBoardContainer\";\r\nimport {BookMarks} from \"./components/BookMarks\";\r\nimport {P404} from \"./components/404/404\";\r\n\r\n\r\nexport function Routes() {\r\n    return <Switch>\r\n        <Route exact path=\"/search\" render={() => <SearchBoardContainer/>}/>\r\n        <Route path=\"/bookmarks\" render={() => <BookMarks/>}/>\r\n        <Route path=\"/404\" render={() => <P404/>}/>\r\n        <Redirect exact from=\"/\" to=\"/search\"/>\r\n        <Redirect from=\"*\" to=\"/404\"/>\r\n    </Switch>\r\n}","import React from 'react';\nimport {Grid, IconButton} from '@material-ui/core';\nimport {Bookmarks, Search} from \"@material-ui/icons\";\nimport {NavLink} from 'react-router-dom';\nimport style from \"./Nav.module.css\"\n\nexport function Nav() {\n\n    return (\n        <div className={style.menu}>\n            <Grid className={style.grid} >\n                <NavLink to=\"/search\" activeClassName={style.active}>\n                    <IconButton>\n                        <Search/>\n                    </IconButton>\n                </NavLink>\n                <NavLink to=\"/bookmarks\" activeClassName={style.active}>\n                    <IconButton>\n                        <Bookmarks/>\n                    </IconButton>\n                </NavLink>\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport style from './Footer.module.css'\r\n\r\nexport function Footer() {\r\n\r\n    return (\r\n        <div className={style.div}>\r\n            <AppBar color=\"inherit\" position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={style.div}>\r\n                        Copyrights\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport IdleTimer from \"react-idle-timer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            maxWidth: 300,\r\n            backgroundColor: \"#282c34\",\r\n            textAlign: \"center\",\r\n            color: \"#ccc\",\r\n            boxShadow: theme.shadows[10],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function TransitionsModal() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IdleTimer timeout={60000} onIdle={handleOpen} onActive={handleClose}/>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 1000,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">App is not active</h2>\r\n                        <p id=\"transition-modal-description\">\r\n                            We are waiting for you!)\r\n                        </p>\r\n                        <q>Enjoy the moment</q>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Container, Grid} from \"@material-ui/core\";\nimport {Routes} from \"./Routes\";\nimport {Nav} from './components/Nav/Nav';\nimport {Footer} from \"./components/Footer/Footer\";\nimport TransitionsModal from \"./components/Modal\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TransitionsModal/>\n            <Header/>\n            <Container maxWidth=\"xl\" className=\"container\">\n                <Grid container className=\"grid\">\n                    <Nav/>\n                    <div className=\"wrap-content\">\n                        <Routes/>\n                    </div>\n                </Grid>\n            </Container>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {settingsReducer} from \"./settingsReducer\";\r\nimport {localStorageReducer} from \"./localstorageReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n    settings: settingsReducer,\r\n    localstorage: localStorageReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n        reducer: rootReducer,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)\r\n    }\r\n)\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchBoard_root__zB-zx\",\"images\":\"SearchBoard_images__26SV4\",\"fixHeight\":\"SearchBoard_fixHeight__2j7Cc\",\"pagination\":\"SearchBoard_pagination__399r5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsText\":\"ImageCard_itemsText__2viTt\",\"root\":\"ImageCard_root__Kit5P\",\"button\":\"ImageCard_button__1Wsn_\",\"media\":\"ImageCard_media__2tDh-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Nav_menu__1cAsj\",\"active\":\"Nav_active__hnkFe\",\"grid\":\"Nav_grid__ns5qP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Header_div__2qzaf\",\"navLink\":\"Header_navLink__1yAgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"404_container__2sjCw\",\"content\":\"404_content__-a-W9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Footer_div__2GPWF\"};"],"sourceRoot":""}